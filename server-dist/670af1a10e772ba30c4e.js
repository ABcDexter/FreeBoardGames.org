exports.ids = [7];
exports.modules = {

/***/ "./src/common/gameMode.ts":
/*!********************************!*\
  !*** ./src/common/gameMode.ts ***!
  \********************************/
/*! exports provided: isLocalGame, isOnlineGame, isAIGame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLocalGame\", function() { return isLocalGame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOnlineGame\", function() { return isOnlineGame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAIGame\", function() { return isAIGame; });\n/* harmony import */ var _App_Game_GameModePicker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../App/Game/GameModePicker */ \"./src/App/Game/GameModePicker.tsx\");\n\nfunction isLocalGame(gameArgs) {\n  return gameArgs && gameArgs.mode === _App_Game_GameModePicker__WEBPACK_IMPORTED_MODULE_0__[\"GameMode\"].LocalFriend;\n}\nfunction isOnlineGame(gameArgs) {\n  return gameArgs && gameArgs.mode === _App_Game_GameModePicker__WEBPACK_IMPORTED_MODULE_0__[\"GameMode\"].OnlineFriend;\n}\nfunction isAIGame(gameArgs) {\n  return gameArgs && gameArgs.mode === _App_Game_GameModePicker__WEBPACK_IMPORTED_MODULE_0__[\"GameMode\"].AI;\n}\n\n//# sourceURL=webpack:///./src/common/gameMode.ts?");

/***/ }),

/***/ "./src/games/fourinarow/Shapes.tsx":
/*!*****************************************!*\
  !*** ./src/games/fourinarow/Shapes.tsx ***!
  \*****************************************/
/*! exports provided: EmptyDisk, CircleGreen, CircleBlue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EmptyDisk\", function() { return EmptyDisk; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CircleGreen\", function() { return CircleGreen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CircleBlue\", function() { return CircleBlue; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst diskRadius = 0.375;\nconst strokeWidth = 0.05;\nconst EmptyDisk = props => {\n  return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"circle\", {\n    key: `empty_circle${props.x},${props.y}`,\n    cx: props.x + 0.5,\n    cy: props.y + 0.5,\n    r: diskRadius,\n    fill: \"rgb(250,250,250)\",\n    strokeWidth: strokeWidth,\n    stroke: \"#c4a870\",\n    onClick: props.onClick\n  });\n};\nconst CircleGreen = props => {\n  return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"circle\", {\n    key: `green_circle${props.x},${props.y}`,\n    cx: props.x + 0.5,\n    cy: props.y + 0.5,\n    r: diskRadius,\n    fill: \"rgb(21, 255, 0)\",\n    strokeWidth: strokeWidth,\n    stroke: \"#c4a870\"\n  });\n};\nconst CircleBlue = props => {\n  return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"circle\", {\n    key: `blue_circle${props.x},${props.y}`,\n    cx: props.x + 0.5,\n    cy: props.y + 0.5,\n    r: diskRadius,\n    fill: \"rgb(80, 80, 253)\",\n    strokeWidth: strokeWidth,\n    stroke: \"#c4a870\"\n  });\n}; // function getGridLines() {\n//   let lines: any = [];\n//   // add all rows\n//   for (let i = 0; i < numOfRows; i++) {\n//     lines.push(<line key={`line_row_${i}`} x1=\"0\" y1={`${i}`} x2={`${numOfColumns}`} y2={`${i}`} style={lineStyle} />);\n//   }\n//   // add all columns\n//   for (let i = 0; i < numOfColumns; i++) {\n//     lines.push(<line key={`line_col_${i}`} x1={`${i}`} y1=\"0\" x2={`${i}`} y2={`${numOfColumns}`} style={lineStyle} />);\n//   }\n//   return lines;\n// }\n// export const Lines = getGridLines();\n\n//# sourceURL=webpack:///./src/games/fourinarow/Shapes.tsx?");

/***/ }),

/***/ "./src/games/fourinarow/board.tsx":
/*!****************************************!*\
  !*** ./src/games/fourinarow/board.tsx ***!
  \****************************************/
/*! exports provided: Board, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Board\", function() { return Board; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _App_Game_GameLayout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../App/Game/GameLayout */ \"./src/App/Game/GameLayout.tsx\");\n/* harmony import */ var _Shapes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Shapes */ \"./src/games/fourinarow/Shapes.tsx\");\n/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material-ui/core/Typography */ \"@material-ui/core/Typography\");\n/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _common_gameMode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/gameMode */ \"./src/common/gameMode.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ \"./src/games/fourinarow/constants.ts\");\n\n\n\n\n\n\nclass Board extends react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"] {\n  constructor() {\n    super(...arguments);\n\n    this.onClick = id => () => {\n      if (this.isActive(id)) {\n        this.props.moves.selectColumn(id);\n\n        if (Object(_common_gameMode__WEBPACK_IMPORTED_MODULE_4__[\"isAIGame\"])(this.props.gameArgs)) {\n          setTimeout(this.props.step, 250);\n        }\n      }\n    };\n  }\n\n  isActive(id) {\n    const rowId = id % 10;\n    const colId = Math.floor(id / 10);\n    return this.props.isActive && this.props.G.grid[colId][rowId] === null;\n  }\n\n  _getStatus() {\n    if (Object(_common_gameMode__WEBPACK_IMPORTED_MODULE_4__[\"isOnlineGame\"])(this.props.gameArgs)) {\n      if (this.props.ctx.currentPlayer === this.props.playerID) {\n        return 'YOUR TURN';\n      } else {\n        return 'Waiting for opponent...';\n      }\n    } else {\n      // Local or AI game\n      return _constants__WEBPACK_IMPORTED_MODULE_5__[\"localPlayerNames\"][this.props.ctx.currentPlayer] + \"'s turn\";\n    }\n  }\n\n  _getGameOver() {\n    if (Object(_common_gameMode__WEBPACK_IMPORTED_MODULE_4__[\"isOnlineGame\"])(this.props.gameArgs)) {\n      // Online game\n      if (this.props.ctx.gameover.winner !== undefined) {\n        if (this.props.ctx.gameover.winner === this.props.playerID) {\n          return 'you won';\n        } else {\n          return 'you lost';\n        }\n      } else {\n        return 'draw';\n      }\n    } else if (Object(_common_gameMode__WEBPACK_IMPORTED_MODULE_4__[\"isAIGame\"])(this.props.gameArgs)) {\n      switch (this.props.ctx.gameover.winner) {\n        case '0':\n          return 'you won';\n\n        case '1':\n          return 'you lost';\n\n        case undefined:\n          return 'draw';\n      }\n    } else {\n      // Local game\n      switch (this.props.ctx.gameover.winner) {\n        case '0':\n          return _constants__WEBPACK_IMPORTED_MODULE_5__[\"localPlayerNames\"]['0'] + ' won';\n\n        case '1':\n          return _constants__WEBPACK_IMPORTED_MODULE_5__[\"localPlayerNames\"]['1'] + ' won';\n\n        case undefined:\n          return 'draw';\n      }\n    }\n  }\n\n  render() {\n    if (this.props.ctx.gameover) {\n      return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_App_Game_GameLayout__WEBPACK_IMPORTED_MODULE_1__[\"GameLayout\"], {\n        gameOver: this._getGameOver(),\n        extraCardContent: this._getGameOverBoard(),\n        gameArgs: this.props.gameArgs\n      });\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_App_Game_GameLayout__WEBPACK_IMPORTED_MODULE_1__[\"GameLayout\"], null, this._getBoard());\n  }\n\n  _getCells() {\n    const cells = [];\n\n    for (let i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_5__[\"numOfColumns\"]; i++) {\n      for (let j = 0; j < _constants__WEBPACK_IMPORTED_MODULE_5__[\"numOfRows\"]; j++) {\n        const id = 10 * i + j;\n        cells.push(react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"rect\", {\n          key: `cell_${id}`,\n          x: i,\n          y: j,\n          width: \"1\",\n          height: \"1\",\n          fill: \"#dac292\",\n          stroke: \"#dac292\",\n          strokeWidth: \"0.05\"\n        }));\n        cells.push(react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_Shapes__WEBPACK_IMPORTED_MODULE_2__[\"EmptyDisk\"], {\n          x: i,\n          y: j,\n          key: `empty_chip_${id}`,\n          onClick: this.onClick(id)\n        }));\n        let overlay;\n\n        if (this.props.G.grid[i][j] === '0') {\n          overlay = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_Shapes__WEBPACK_IMPORTED_MODULE_2__[\"CircleBlue\"], {\n            x: i,\n            y: j,\n            key: `chip_${id}`\n          });\n        } else if (this.props.G.grid[i][j] === '1') {\n          overlay = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_Shapes__WEBPACK_IMPORTED_MODULE_2__[\"CircleGreen\"], {\n            x: i,\n            y: j,\n            key: `chip_${id}`\n          });\n        }\n\n        if (overlay) {\n          cells.push(overlay);\n        }\n      }\n    }\n\n    return cells;\n  }\n\n  _getBoard() {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null, react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default.a, {\n      variant: \"h5\",\n      style: {\n        textAlign: 'center',\n        color: 'white',\n        marginBottom: '16px'\n      }\n    }, this._getStatus()), react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      viewBox: \"0 0 7 6\"\n    }, this._getCells()));\n  }\n\n  _getGameOverBoard() {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", {\n      style: {\n        textAlign: 'center'\n      }\n    }, react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", {\n      width: \"50%\",\n      height: \"50%\",\n      viewBox: \"0 0 7 6\"\n    }, this._getCells()));\n  }\n\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);\n\n//# sourceURL=webpack:///./src/games/fourinarow/board.tsx?");

/***/ }),

/***/ "./src/games/fourinarow/config.ts":
/*!****************************************!*\
  !*** ./src/games/fourinarow/config.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/games/fourinarow/game.ts\");\n/* harmony import */ var _board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./board */ \"./src/games/fourinarow/board.tsx\");\n\n\nconst config = {\n  bgioGame: _game__WEBPACK_IMPORTED_MODULE_0__[\"ConnectFourGame\"],\n  bgioBoard: _board__WEBPACK_IMPORTED_MODULE_1__[\"Board\"]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (config);\n\n//# sourceURL=webpack:///./src/games/fourinarow/config.ts?");

/***/ }),

/***/ "./src/games/fourinarow/constants.ts":
/*!*******************************************!*\
  !*** ./src/games/fourinarow/constants.ts ***!
  \*******************************************/
/*! exports provided: numOfRows, numOfColumns, neededToWin, localPlayerNames */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"numOfRows\", function() { return numOfRows; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"numOfColumns\", function() { return numOfColumns; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"neededToWin\", function() { return neededToWin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"localPlayerNames\", function() { return localPlayerNames; });\nconst numOfRows = 6;\nconst numOfColumns = 7;\nconst neededToWin = 4;\nconst localPlayerNames = {\n  '0': 'Blue',\n  '1': 'Green'\n};\n\n\n//# sourceURL=webpack:///./src/games/fourinarow/constants.ts?");

/***/ }),

/***/ "./src/games/fourinarow/game.ts":
/*!**************************************!*\
  !*** ./src/games/fourinarow/game.ts ***!
  \**************************************/
/*! exports provided: isVictory, isDraw, generateGrid, ConnectFourGame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isVictory\", function() { return isVictory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDraw\", function() { return isDraw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateGrid\", function() { return generateGrid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectFourGame\", function() { return ConnectFourGame; });\n/* harmony import */ var _freeboardgame_org_boardgame_io_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @freeboardgame.org/boardgame.io/core */ \"@freeboardgame.org/boardgame.io/core\");\n/* harmony import */ var _freeboardgame_org_boardgame_io_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_freeboardgame_org_boardgame_io_core__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/games/fourinarow/constants.ts\");\n\n\n\nfunction checkCellForVictory(grid, colId, rowId, player) {\n  let fourCells = new Array(_constants__WEBPACK_IMPORTED_MODULE_1__[\"neededToWin\"]); // check horizontally\n\n  for (var i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_1__[\"neededToWin\"]; i++) {\n    try {\n      fourCells[i] = grid[colId][rowId + i];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n\n  if (fourCells.every(function (val) {\n    return val === player;\n  })) {\n    return true;\n  } // check vertically\n\n\n  for (var i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_1__[\"neededToWin\"]; i++) {\n    try {\n      fourCells[i] = grid[colId + i][rowId];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n\n  if (fourCells.every(function (val) {\n    return val === player;\n  })) {\n    return true;\n  } // check diagonally-downwards\n\n\n  for (var i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_1__[\"neededToWin\"]; i++) {\n    try {\n      fourCells[i] = grid[colId + i][rowId + i];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n\n  if (fourCells.every(function (val) {\n    return val === player;\n  })) {\n    return true;\n  } // check diagonally-upwards\n\n\n  for (var i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_1__[\"neededToWin\"]; i++) {\n    try {\n      fourCells[i] = grid[colId - i][rowId + i];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n\n  if (fourCells.every(function (val) {\n    return val === player;\n  })) {\n    return true;\n  }\n}\n\nfunction isVictory(grid, player) {\n  for (var colId = 0; colId < _constants__WEBPACK_IMPORTED_MODULE_1__[\"numOfColumns\"]; colId++) {\n    for (var rowId = 0; rowId < _constants__WEBPACK_IMPORTED_MODULE_1__[\"numOfRows\"]; rowId++) {\n      if (checkCellForVictory(grid, colId, rowId, player)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\nfunction isDraw(grid) {\n  for (var colIdx = _constants__WEBPACK_IMPORTED_MODULE_1__[\"numOfColumns\"] - 1; colIdx >= 0; colIdx--) {\n    for (var rowIdx = _constants__WEBPACK_IMPORTED_MODULE_1__[\"numOfRows\"] - 1; rowIdx >= 0; rowIdx--) {\n      if (grid[colIdx][rowIdx] === null) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\nfunction generateGrid() {\n  const grid = {};\n\n  for (var rowIdx = 0; rowIdx < _constants__WEBPACK_IMPORTED_MODULE_1__[\"numOfColumns\"]; rowIdx++) {\n    grid[rowIdx] = Array(_constants__WEBPACK_IMPORTED_MODULE_1__[\"numOfRows\"]).fill(null);\n  }\n\n  return grid;\n}\nconst ConnectFourGame = Object(_freeboardgame_org_boardgame_io_core__WEBPACK_IMPORTED_MODULE_0__[\"Game\"])({\n  name: 'ConnectFour',\n  setup: () => {\n    return {\n      grid: generateGrid()\n    };\n  },\n  moves: {\n    selectColumn(G, ctx, id) {\n      const colId = Math.floor(id / 10);\n\n      for (var rowID = _constants__WEBPACK_IMPORTED_MODULE_1__[\"numOfRows\"] - 1; rowID >= 0; rowID--) {\n        if (G.grid[colId][rowID] === null) {\n          G.grid[colId][rowID] = ctx.currentPlayer;\n          return;\n        }\n      } // return { ...G, grid };\n\n    }\n\n  },\n  flow: {\n    movesPerTurn: 1,\n    endGameIf: (G, ctx) => {\n      if (isVictory(G.grid, ctx.currentPlayer)) {\n        return {\n          winner: ctx.currentPlayer\n        };\n      }\n\n      if (isDraw(G.grid)) {\n        return {\n          draw: true\n        };\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack:///./src/games/fourinarow/game.ts?");

/***/ })

};;